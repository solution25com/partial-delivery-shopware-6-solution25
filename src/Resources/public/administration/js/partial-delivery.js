(function(){var e={529:function(){},701:function(){let{Component:e}=Shopware;e.override("sw-order-line-items-grid",{created(){console.log("[DEBUG] sw-order-line-items-grid override: created hook")},computed:{unitPriceLabel(){return(console.log("[DEBUG] sw-order-line-items-grid override: unitPriceLabel method called. Tax status:",this.taxStatus),"net"===this.taxStatus)?this.$tc("Unit Price"):"tax-free"===this.taxStatus?this.$tc("sw-order.detailBase.columnPriceTaxFree"):this.$tc("sw-order.detailBase.columnPriceGross")},getLineItemColumns(){let e=[{property:"quantity",dataIndex:"quantity",label:"sw-order.detailBase.columnQuantity",allowResize:!1,align:"right",inlineEdit:!0,width:"90px"},{property:"label",dataIndex:"label",label:"sw-order.detailBase.columnProductName",allowResize:!1,primary:!0,inlineEdit:!0,multiLine:!0},{property:"payload.productNumber",dataIndex:"payload.productNumber",label:"sw-order.detailBase.columnProductNumber",allowResize:!1,align:"left",visible:!1},{property:"unitPrice",dataIndex:"unitPrice",label:this.unitPriceLabel,allowResize:!1,align:"right",inlineEdit:!0,width:"120px"}];return"tax-free"!==this.taxStatus&&e.push({property:"price.taxRules[0]",label:"Tax",allowResize:!1,align:"right",inlineEdit:!0,width:"90px"}),[...e,{property:"totalPrice",dataIndex:"totalPrice",label:"gross"===this.taxStatus?"sw-order.detailBase.columnTotalPriceGross":"sw-order.detailBase.columnTotalPriceNet",allowResize:!1,align:"right",width:"120px"}]}}})},556:function(){let{Component:e}=Shopware;e.override("swag-return-management-create-return-modal",{data(){return{returnQuantityAdded:!1}},methods:{hasReturnLineItems(e){return e?.extensions?.returns?.reduce((e,t)=>e+t.quantity,0)>=e.quantity},onSave(){this.isLoading=!0;let e=this.lineItems.filter(e=>{let t=e.extensions?.returns?.reduce((e,t)=>e+(t.quantity||0),0),n=e.quantity-t;return e.returnQuantity>n&&(e.returnQuantity=n),e.returnQuantity>0});if(0===e.length){this.createNotificationError({message:this.$tc("swag-return-management.returnModal.messageErrorNoItemHasQuantity")}),this.isLoading=!1;return}return e=e.map(e=>({orderLineItemId:e.id,quantity:e.returnQuantity,internalComment:e.comment})),this.createOrderReturn(e)}}})},119:function(e,t,n){var r=n(529);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),n(346).Z("43d72782",r,!0,{})},346:function(e,t,n){"use strict";function r(e,t){for(var n=[],r={},a=0;a<t.length;a++){var i=t[a],s=i[0],o={id:e+":"+a,css:i[1],media:i[2],sourceMap:i[3]};r[s]?r[s].parts.push(o):n.push(r[s]={id:s,parts:[o]})}return n}n.d(t,{Z:function(){return h}});var a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},s=a&&(document.head||document.getElementsByTagName("head")[0]),o=null,d=0,l=!1,c=function(){},u=null,m="data-vue-ssr-id",p="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,t,n,a){l=n,u=a||{};var s=r(e,t);return g(s),function(t){for(var n=[],a=0;a<s.length;a++){var o=i[s[a].id];o.refs--,n.push(o)}t?g(s=r(e,t)):s=[];for(var a=0;a<n.length;a++){var o=n[a];if(0===o.refs){for(var d=0;d<o.parts.length;d++)o.parts[d]();delete i[o.id]}}}}function g(e){for(var t=0;t<e.length;t++){var n=e[t],r=i[n.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](n.parts[a]);for(;a<n.parts.length;a++)r.parts.push(y(n.parts[a]));r.parts.length>n.parts.length&&(r.parts.length=n.parts.length)}else{for(var s=[],a=0;a<n.parts.length;a++)s.push(y(n.parts[a]));i[n.id]={id:n.id,refs:1,parts:s}}}}function w(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function y(e){var t,n,r=document.querySelector("style["+m+'~="'+e.id+'"]');if(r){if(l)return c;r.parentNode.removeChild(r)}if(p){var a=d++;t=v.bind(null,r=o||(o=w()),a,!1),n=v.bind(null,r,a,!0)}else t=b.bind(null,r=w()),n=function(){r.parentNode.removeChild(r)};return t(e),function(r){r?(r.css!==e.css||r.media!==e.media||r.sourceMap!==e.sourceMap)&&t(e=r):n()}}var f=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function v(e,t,n,r){var a=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,a);else{var i=document.createTextNode(a),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(i,s[t]):e.appendChild(i)}}function b(e,t){var n=t.css,r=t.media,a=t.sourceMap;if(r&&e.setAttribute("media",r),u.ssrId&&e.setAttribute(m,t.id),a&&(n+="\n/*# sourceURL="+a.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="bundles/partialdelivery/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/partialdelivery/"),function(){"use strict";let{Component:e}=Shopware;e.override("sw-order-detail",{template:"{% block sw_order_detail_content_tabs_documents %}\n    {% parent %}\n    <sw-tabs-item\n            :route=\"{ name: 'sw.order.detail.shipment' }\"\n            :title=\"$tc('sw-order.detail.tabShipment')\"\n    >\n        Shipments\n    </sw-tabs-item>\n{% endblock %}\n",created(){}});var t=Shopware;let{Criteria:r}=Shopware.Data;t.Component.register("sw-order-detail-shipment-create",{template:'<template>\n<sw-card>\n   <template #toolbar>\n        <sw-button\n            variant="ghost"\n            @click="$emit(\'close-shipment-form\')"\n        >\n            Close Shipment Form\n        </sw-button>\n    </template>\n    <template #default>\n        <div class="shipment-form">\n            <sw-container>\n              <sw-data-grid\n                   :dataSource="orderLineItems"\n                    :columns="columns"\n                    selectionMode="multi"\n                    :showSelection="false"\n                    :allowInlineEdit="false"\n                    :showPagination="true"\n                    :limit="10"\n                    @selection-change="onSelectOrderLineItem"\n                >\n                    <template #column-select="{ item }">\n                     <input\n                        type="radio"\n                        name="shipmentItem"\n                        :value="item.id"\n                        v-model="shipmentData.orderLineItemId"\n                    />\n                    </template>\n                    <template #column-label="{ item }">\n                        {{ item.label || item.id }}\n                    </template>\n                    <template #column-quantity="{ item }">\n                        {{ item.quantity }}\n                    </template>\n                </sw-data-grid>\n\n                <sw-number-field\n                    v-model:value="shipmentData.quantity"\n                    label="Quantity"\n                    placeholder="Enter quantity"\n                    min="1"\n                ></sw-number-field>\n\n                <sw-text-field\n                    v-model:value="shipmentData.package"\n                    label="Package"\n                    placeholder="Enter package name"\n                ></sw-text-field>\n\n                <sw-text-field\n                    v-model:value="shipmentData.trackingCode"\n                    label="Tracking Code"\n                    placeholder="Enter tracking code"\n                ></sw-text-field>\n            </sw-container>\n        </div>\n    </template>\n\n    <template #footer>\n        <sw-button variant="primary" @click="createShipment">Create Shipment</sw-button>\n        <sw-button variant="secondary" @click="resetForm">Reset</sw-button>\n    </template>\n \n</sw-card>\n\n</template>',inject:["repositoryFactory"],mixins:[t.Mixin.getByName("notification")],data(){return{orderId:this.$route.params.id,orderLineItems:[],selectedOrderLineItem:null,shipmentData:{orderLineItemId:"",quantity:0,package:"",trackingCode:""},columns:[{property:"select",label:"",rawData:!0,allowResize:!1},{property:"label",label:"Item"},{property:"quantity",label:"Available Quantity"}]}},computed:{orderLineItemRepository(){return this.repositoryFactory.create("order_line_item")}},methods:{async loadOrderLineItems(){if(!this.orderId)return;let e=new r;e.addFilter(r.equals("orderId",this.orderId)),e.setLimit(10);try{this.orderLineItems=await this.orderLineItemRepository.search(e,Shopware.Context.api)}catch(e){console.error("Error fetching order line items:",e)}},onSelectOrderLineItem(e){let t=Object.keys(e);this.shipmentData.orderLineItemId=t.length>0?t[0]:""},async createShipment(){if(!this.shipmentData.orderLineItemId){this.createNotificationError({title:"Shipment Error",message:"Please select an order line item before creating a shipment."});return}let e={partialDeliveries:[{orderLineItemId:this.shipmentData.orderLineItemId,quantity:this.shipmentData.quantity,package:this.shipmentData.package,trackingCode:this.shipmentData.trackingCode}]};try{let t=await Shopware.Service("repositoryFactory").httpClient.post("/_action/partial-shipment-delivery",e,{headers:{"Content-Type":"application/json",Authorization:`Bearer ${Shopware.Context.api.authToken.access}`}});t.data.insertedIds.length>0?(this.createNotificationSuccess({title:"Shipment Created",message:"The shipment has been successfully recorded."}),this.resetForm(),this.$emit("shipment-created")):this.createNotificationWarning({title:"Shipment Warning",message:"No shipments were created. Some items may have been skipped."}),t.data.skippedItems&&t.data.skippedItems.length>0&&t.data.skippedItems.forEach(e=>{this.createNotificationWarning({title:"Shipment Skipped",message:`Item ID ${e.orderLineItemId}: ${e.reason}`})})}catch(e){this.createNotificationError({title:"Shipment Error",message:"An error occurred while creating the shipment. Please try again."})}},resetForm(){this.shipmentData={orderLineItemId:"",quantity:0,package:"",trackingCode:""}}},created(){this.loadOrderLineItems()}});let{Component:a}=Shopware,{Criteria:i}=Shopware.Data;a.register("sw-order-detail-shipment",{template:'{% block partial_shipment_create %}\n    <div class="shipment-container">\n     <sw-loader v-if="isLoading" size="large" class="shipment-loader" />\n     <template v-else>\n            <sw-button\n                v-if="shipments.length > 0 && !showCreateShipment"\n                variant="primary"\n                class="custom-save-all-bundles-button"\n                @click="toggleShipmentCreation">\n                Create Shipment\n            </sw-button>\n\n            <sw-order-detail-shipment-create \n                v-if="showCreateShipment"\n                @close-shipment-form="toggleShipmentCreation"\n                @shipment-created="onShipmentCreated">\n            </sw-order-detail-shipment-create>\n            <sw-card  v-if="!hasPartialDelivery && !showCreateShipment">\n              <sw-button\n                variant="primary"\n                class="custom-save-all-bundles-button"\n                @click="toggleShipmentCreation">\n                Create Shipment\n            </sw-button>\n                <div class="no-shipments">\n                    No shipment details found for this order!\n                </div>\n            </sw-card>\n        <table  v-if="hasPartialDelivery && !showCreateShipment" class="sw-table">\n            <thead>\n            <tr>\n                <th>Prod. no.</th>\n                <th>Ordered</th>\n                <th>Canceled</th>\n                <th>Shipped</th>\n                <th>Shipment Details</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr v-for="shipment in shipments" :key="shipment.lineItemId">\n                <td>\n                    <div v-if="productDetails[shipment.productId]">\n                        {{ productDetails[shipment.productId].productNumber }} -\n                        {{ productDetails[shipment.productId].name }}\n                    </div>\n                </td>\n                <td>{{ shipment.quantityOrdered }}</td>\n\n                <td>\n                    {{ shipment.quantityLeft }}\n                </td>\n\n                <td>{{ shipment.quantityShipped }}</td>\n                <td>\n                    <table class="shipment-details">\n                        <thead>\n                        <tr>\n                            <th>Box</th>\n                            <th>Qty</th>\n                            <th>Tracking</th>\n                            <th>Created at</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr v-for="(s, index) in shipment.shipments" :key="index">\n                            <td>{{ s.package }}</td>\n                            <td class="quantity">{{ s.quantity }}</td>\n                            <td>{{ s.trackingCode }}</td>\n                            <td>{{ formatDateTime(s.createdAt) }}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        </template>\n    </div>\n{% endblock %}',props:{orderId:{type:String,required:!0}},data(){return{shipments:[],productDetails:{},hasPartialDelivery:!0,showCreateShipment:!1,isLoading:!1}},created(){this.loadShipments()},methods:{async loadShipments(){this.isLoading=!0;try{let e=Shopware.Service("repositoryFactory").create("order_delivery_position"),t=Shopware.Service("repositoryFactory").create("order_line_item"),n=Shopware.Service("repositoryFactory").create("product"),r=Shopware.Service("repositoryFactory").create("partial_delivery"),a=new i;a.addFilter(i.equals("orderDelivery.orderId",this.orderId)),a.addAssociation("orderDelivery");let s=await e.search(a,Shopware.Context.api),o=[...new Set(s.map(e=>e.orderLineItemId))],d=new i;d.addFilter(i.equalsAny("id",o));let l=await t.search(d,Shopware.Context.api),c={},u=[];if(l.forEach(e=>{e.productId&&(u.push(e.productId),c[e.id]={productId:e.productId,productName:e.label,quantityOrdered:e.quantity,shipments:[]})}),u.length){let e=new i;e.addFilter(i.equalsAny("id",u)),(await n.search(e,Shopware.Context.api)).forEach(e=>{this.productDetails[e.id]={productNumber:e.productNumber,name:e.translated.name||e.name}})}let m=new i;m.addFilter(i.equalsAny("orderLineItemId",o));let p=await r.search(m,Shopware.Context.api);if(p.forEach(e=>{c[e.orderLineItemId]&&c[e.orderLineItemId].shipments.push({quantity:e.quantity,package:e.package,trackingCode:e.trackingCode,createdAt:e.createdAt})}),!p.length){this.hasPartialDelivery=!1,this.shipments=[];return}this.hasPartialDelivery=!0,this.shipments=Object.values(c).map(e=>{let t=e.shipments.reduce((e,t)=>e+t.quantity,0);return{...e,productNumber:this.productDetails[e.productId]?.productNumber||"",quantityShipped:t,quantityLeft:e.quantityOrdered-t}}).filter(e=>e.shipments.length>0)}catch(e){console.error("Error loading shipments:",e),this.createNotificationError({title:"Loading Error",message:"An error occurred while loading shipment data."})}finally{this.isLoading=!1}},formatDateTime(e){return new Date(e).toISOString().slice(0,16).replace("T"," ")},toggleShipmentCreation(){this.showCreateShipment=!this.showCreateShipment},async onShipmentCreated(){this.shipments=[],await this.loadShipments()}}}),n(556);let{Component:s,Mixin:o,Filter:d,Utils:l}=Shopware;s.register("swag-return-management-return-card",{template:'<sw-card\n    class="swag-return-management-return-card"\n    position-identifier="swag-return-management-return-card"\n    :title="cardTitle"\n>\nTEST\n    <template #header-right>\n        <sw-button\n            v-tooltip="{\n                message: $tc(\'sw-privileges.tooltip.warning\'),\n                disabled: acl.can(\'order_return.deleter\'),\n                showOnDisabledElements: true\n            }"\n            variant="ghost-danger"\n            size="small"\n            :disabled="!acl.can(\'order_return.deleter\')"\n            @click="openDeleteReturnModal"\n        >\n            {{ $tc(\'global.default.delete\') }}\n        </sw-button>\n    </template>\n\n    <div\n        v-if="!isLoading"\n        class="swag-return-management-return-card__header-description"\n    >\n        {{ cardDescription }}\n    </div>\n\n    <sw-tabs\n        v-show="!isLoading"\n        position-identifier="swag-return-management-return-card-tabs"\n        class="swag-return-management-return-card__tabs"\n        default-item="generalInformation"\n    >\n        <template #default="{ active }">\n            <sw-tabs-item\n                name="generalInformation"\n                :active-tab="active"\n            >\n                {{ $tc(\'swag-return-management.returnCard.generalTab.labelGeneralInformation\') }}\n            </sw-tabs-item>\n\n            <sw-tabs-item\n                name="positions"\n                :active-tab="active"\n            >\n                {{ $tc(\'swag-return-management.returnCard.positionsTab.labelPositions\') }}\n            </sw-tabs-item>\n\n            <sw-tabs-item\n                name="statusHistory"\n                :active-tab="active"\n            >\n                {{ $tc(\'swag-return-management.returnCard.statusTab.labelStatusHistory\') }}\n            </sw-tabs-item>\n        </template>\n\n        <template #content="{ active }">\n            <template v-if="active === \'generalInformation\'">\n                <sw-container\n                    columns="1fr 1fr"\n                    gap="32px"\n                    class="swag-return-management-return-card-general"\n                >\n                    <sw-container>\n                        <sw-order-state-select-v2\n                            v-tooltip="{\n                                message: $tc(\'sw-privileges.tooltip.warning\'),\n                                disabled: acl.can(\'order_return.editor\'),\n                                showOnDisabledElements: true\n                            }"\n                            class="swag-return-management-return-card__return-state"\n                            :transition-options="orderReturnStateOptions"\n                            rounded-style\n                            state-type="order-return"\n                            :placeholder="stateSelectPlaceholder"\n                            :label="$tc(\'swag-return-management.returnCard.generalTab.headlineOrderState\')"\n                            :background-style="backgroundStyle(\'order_return\')"\n                            :disabled="!acl.can(\'order_return.editor\')"\n                            @state-select="onStateSelect"\n                        />\n\n                        <sw-textarea-field\n                            v-model:value="item.internalComment"\n                            class="swag-return-management-return-card__info-comment"\n                            :disabled="!acl.can(\'order_return.editor\')"\n                            :label="$tc(\'swag-return-management.returnCard.generalTab.labelComment\')"\n                            :placeholder="$tc(\'swag-return-management.returnCard.generalTab.placeholderComment\')"\n                        />\n                    </sw-container>\n\n                    <sw-description-list\n                        class="swag-return-management-detail__summary"\n                        grid="1fr 1fr"\n                    >\n                        <dt>\n                            {{ $tc(\'swag-return-management.returnCard.generalTab.numberOfProducts\') }}\n                        </dt>\n                        <dd>\n                            <strong>{{ returnLineItems.length }}</strong> {{ $tc(\'swag-return-management.returnCard.generalTab.items\', totalItems, {total: totalItems}) }}\n                        </dd>\n\n                        <dt>{{ $tc(\'swag-return-management.returnCard.summaryLabelAmount\') }}</dt>\n                        <dd>{{ currencyFilter(returnItem.price.positionPrice, order.currency.translated.shortName, order.totalRounding.decimals) }}</dd>\n\n                        <dt>{{ $tc(\'swag-return-management.returnCard.summaryLabelShippingCosts\') }}</dt>\n                        <dd>\n                            {{ currencyFilter(returnItem.shippingCosts.totalPrice, order.currency.translated.shortName) }}\n                        </dd>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <dt><strong>{{ $tc(\'swag-return-management.returnCard.summaryLabelAmountWithoutTaxes\') }}</strong></dt>\n                            <dd><strong>{{ currencyFilter(returnItem.price.netPrice, order.currency.translated.shortName, order.totalRounding.decimals) }}</strong></dd>\n                        </template>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <template\n                                v-for="(calculatedTax, index) in sortedCalculatedTaxes"\n                                :key="`sorted-calculated-taxes-${index}`"\n                            >\n                                <dt>\n                                    {{ $tc(\'swag-return-management.returnCard.summaryLabelTaxes\', 1, { taxRate: calculatedTax.taxRate }) }}\n                                </dt>\n                                <dd>\n                                    {{ currencyFilter(calculatedTax.tax, order.currency.translated.shortName, order.totalRounding.decimals) }}\n                                </dd>\n                            </template>\n                        </template>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <dt><strong>{{ $tc(\'swag-return-management.returnCard.summaryLabelAmountTotal\') }}</strong></dt>\n                            <dd><strong>{{ currencyFilter(returnItem.price.totalPrice, order.currency.translated.shortName, order.totalRounding.decimals) }}</strong></dd>\n                        </template>\n                    </sw-description-list>\n                </sw-container>\n            </template>\n\n            <template v-if="active === \'positions\'">\n                <div\n                    class="swag-return-management-return-card-positions"\n                >\n                    <swag-return-management-return-line-items-grid\n                        :return-line-items="returnLineItems"\n                        :tax-status="taxStatus"\n                        :return-id="item.id"\n                        @reload-data="reloadData"\n                    />\n\n                    <sw-description-list\n                        v-if="returnLineItems.length > 0"\n                        class="swag-return-management-detail__summary"\n                        grid="1fr 1fr"\n                    >\n                        <dt>{{ $tc(\'sw-order.detailBase.summaryLabelAmount\') }}</dt>\n                        <dd>{{ currencyFilter(returnItem.price.positionPrice, order.currency.translated.shortName, order.totalRounding.decimals) }}</dd>\n\n                        <dt>{{ $tc(\'swag-return-management.returnCard.summaryLabelShippingCosts\') }}</dt>\n                        <dd>\n                            <sw-order-saveable-field\n                                v-tooltip="{\n                                    showDelay: 300,\n                                    message: shippingCostsDetail,\n                                    disabled: taxStatus === \'tax-free\'\n                                }"\n                                type="number"\n                                :value="item.shippingCosts.totalPrice"\n                                :editable="acl.can(\'order_return.editor\')"\n                                @value-change="onShippingChargeEdit"\n                            >\n                                {{ currencyFilter(returnItem.shippingCosts.totalPrice, order.currency.translated.shortName, order.totalRounding.decimals) }}\n                            </sw-order-saveable-field>\n                        </dd>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <dt><strong>{{ $tc(\'swag-return-management.returnCard.summaryLabelAmountWithoutTaxes\') }}</strong></dt>\n                            <dd><strong>{{ currencyFilter(returnItem.price.netPrice, order.currency.translated.shortName, order.totalRounding.decimals) }}</strong></dd>\n                        </template>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <template\n                                v-for="(calculatedTax, index) in sortedCalculatedTaxes"\n                                :key="`sorted-calculated-taxes-${index}`"\n                            >\n                                <dt>\n                                    {{ $tc(\'swag-return-management.returnCard.summaryLabelTaxes\', 1, { taxRate: calculatedTax.taxRate }) }}\n                                </dt>\n                                <dd>\n                                    {{ currencyFilter(calculatedTax.tax, order.currency.translated.shortName, order.totalRounding.decimals) }}\n                                </dd>\n                            </template>\n                        </template>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <dt><strong>{{ $tc(\'swag-return-management.returnCard.summaryLabelAmountTotal\') }}</strong></dt>\n                            <dd><strong>{{ currencyFilter(returnItem.price.totalPrice, order.currency.translated.shortName, order.totalRounding.decimals) }}</strong></dd>\n                        </template>\n                    </sw-description-list>\n                </div>\n            </template>\n\n            <template v-if="active === \'statusHistory\'">\n                <swag-return-management-return-card-state-history\n                    :order-return="returnItem"\n                />\n            </template>\n\n        </template>\n    </sw-tabs>\n\n    <swag-return-management-delete-return-modal\n        v-if="showDeleteReturnModal && returnItem"\n        :order-return="returnItem"\n        @reload-data="reloadData"\n        @modal-close="onCloseDeleteReturnModal"\n    />\n\n    <sw-skeleton v-if="isLoading" />\n\n    <swag-return-management-change-return-state-modal\n        v-if="showChangeStatusModal"\n        :return-id="item.id"\n        :selected-state="selectedState"\n        @status-change="onReturnStateChange"\n        @modal-close="onCloseChangeStatusModal"\n    />\n</sw-card>\n',mixins:[o.getByName("notification")],inject:["acl","repositoryFactory","stateMachineService","stateStyleDataProviderService","orderReturnApiService"],props:{item:{type:Object,required:!0}}}),n(701);let{Component:c}=Shopware,{Criteria:u}=Shopware.Data;c.override("sw-order-detail-general",{template:'{% block sw_order_detail_general_line_items_summary_amount_without_tax %}\n    <template v-if="taxStatus !== \'tax-free\'">\n        <dt><strong>Total excluding Tax</strong></dt>\n        <dd><strong>{{ currencyFilter(order.amountNet, currency.isoCode, order.totalRounding.decimals) }}</strong></dd>\n    </template>\n{% endblock %}\n\n{% block sw_order_detail_general_line_items_summary_taxes %}\n    <template v-if="taxStatus !== \'tax-free\'">\n        <template v-for="(calculatedTax, index) in sortedCalculatedTaxes" :key="index">\n            <dt>plus {{ calculatedTax.taxRate }}% Tax</dt>\n            <dd>\n                {{ currencyFilter(calculatedTax.tax, currency.isoCode, order.totalRounding.decimals) }}\n            </dd>\n        </template>\n    </template>\n{% endblock %}\n\n{% block sw_order_detail_general_line_items_summary_amount_total %}\n    <template v-if="taxStatus !== \'tax-free\'">\n        <dt><strong>Total including Tax</strong></dt>\n        <dd><strong>{{ currencyFilter(orderTotal, currency.isoCode, order.totalRounding.decimals) }}</strong></dd>\n        <template v-if="displayRounded">\n            <dt><strong>{{ $tc(\'sw-order.detailBase.summaryLabelAmountTotalRounded\') }}</strong></dt>\n            <dd><strong>{{ currencyFilter(order.price.totalPrice, currency.isoCode, order.totalRounding.decimals) }}</strong></dd>\n        </template>\n    </template>\n{% endblock %}\n{% block sw_order_detail_general_line_items_card %}\n    {% parent %}\n\n    <div class="my-custom-text">\n        <sw-card title="Order Return Data" class="my-custom-return-card">\n            <sw-single-select\n                :options="returnOptions"\n                v-model:value="selectedReturnId"\n                label-property="label"\n                value-property="id"\n                placeholder="Select a return"\n                class="refund-select"\n            />\n\n             <sw-button\n                variant="primary"\n                @click="onRefundClick"\n                :disabled="!selectedReturnId"\n                class="refund-button"\n            >\n                Refund Now\n            </sw-button>\n\n        </sw-card>\n    </div>\n{% endblock %}\n\n',inject:["repositoryFactory"],data(){return{returnOptions:[],selectedReturnId:null,selectedReturnData:null}},computed:{orderId(){return this.$route.params.id||this.order?.id},stateMachineStateRepository(){return this.repositoryFactory.create("state_machine_state")}},methods:{async getDoneState(){return await this.stateMachineStateRepository.search(this.stateMachineStateCriteria())},stateMachineStateCriteria(){return new u(1,50).addAssociation("stateMachine").addFilter(u.equals("stateMachine.technicalName","order_return.state")).addFilter(u.equals("technicalName","open"))},async fetchReturnOptions(){try{let e=this.$route.params.id||this.order?.id;if(!e){this.createNotificationError({title:"Order ID missing",message:"Cannot fetch returns without an order ID."});return}let t=await this.getDoneState(),n=[{type:"equals",field:"orderId",value:e}];t&&t[0]?.id&&n.push({type:"equals",field:"stateId",value:t[0].id});let r=(await Shopware.Service("repositoryFactory").httpClient.post("/search/order-return",{filter:n},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${Shopware.Context.api.authToken.access}`}})).data.data.map(e=>({id:e.id,label:`Return #${e.returnNumber} - ${e.amountTotal}`}));this.returnOptions=r}catch(e){this.createNotificationError({title:"Error loading returns",message:e.message})}},onReturnSelect(e){this.selectedReturnData=this.returnOptions.find(t=>t.id===e)},async onRefundClick(){if(!this.orderId||!this.selectedReturnId){this.createNotificationError({title:"Refund Error",message:"Order ID or Return ID is missing."});return}try{await Shopware.Service("repositoryFactory").httpClient.post("/refund",{orderId:this.orderId,returnId:this.selectedReturnId},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${Shopware.Context.api.authToken.access}`}}),this.createNotificationSuccess({title:"Refund Triggered",message:"The refund request was successfully sent."})}catch(e){this.createNotificationError({title:"Refund Failed",message:e.response?.data?.errors?.[0]?.detail||e.message})}}},mounted(){this.fetchReturnOptions()}}),n(119),Shopware.Module.register("order-detail-shipment",{routeMiddleware(e,t){"sw.order.detail"===t.name&&t.children.every(e=>"sw.order.detail.shipment"!==e.name)&&t.children.push({name:"sw.order.detail.shipment",path:"/sw/order/detail/:id/shipment",component:"sw-order-detail-shipment",meta:{parentPath:"sw.product.index"}}),e(t)}})}()})();